swagger: '2.0'
  
info:
  description: This is simple Todos API
  version: 1.0.0
  title: Simple Todos API
  contact:
    email: risse@usc.edu

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html


paths:
  /todos:
    get:
      operationId: getTodos
      description: Returns all todos
      produces:
      - application/json
      responses:
        200:
          description: search results for all todos
          schema:
            type: array
            items:
              $ref: '#/definitions/Todo'
        404:
          description: not found
    post:
      consumes:
        - application/json
      operationId: createTodo
      description: Adds a todo 
      produces:
      - application/json
      parameters:
      - in: body
        name: name
        description: Todo name to be added
        schema:
          type: object
          required:
            - name
          properties:
            name:
              type: string
      responses:
        201:
          description: Todo that was created
          schema:
            $ref: '#/definitions/Todo'
            
  /todos/{todoId}:
      get:
        operationId: getTodo
        description: Return specific todo
        produces:
        - application/json
        parameters:
          - name: todoId
            in: path
            type: string
            description: uuid of todo
            required: true
        responses:
          201:
            description: search result for todo
            schema:
               $ref: '#/definitions/Todo'
          404:
           description: not found
      put:
        operationId: updateTodo
        description: Change todo status to completed/incompleted
        produces:
        - application/json
        parameters:
          - name: todoId
            in: path
            type: string
            description: uuid of todo
            required: true
          - name: completed
            in: body
            description: boolean status of completed
            schema:
              type: object
              required:
                - completed
              properties:
                completed: 
                  type: boolean
        
        responses:
          200:
            description: updated todo
            schema:
               $ref: '#/definitions/Todo'
          404:
           description: not found
           
      delete:
        operationId: deleteTodo
        description: Deletes a todo 
        consumes:
          - text/plain
        produces:
        - application/json
        parameters:
          - in: path
            name: todoId
            type: string
            description: uuid of todo
            required: true
        responses:
          200:
            description: Todo was deleted
            schema:
              $ref: '#/definitions/Response'
          404:
           description: not found

definitions:
  Todo:
    type: object
    required:
    - _id
    - name
    - completed
    - created_date
    properties:
      id:
        type: string
        format: uuid
        example: 5de7faca757bbb03b8a05b25
      name:
        type: string
        example: Buy groceries
      compeleted:
        type: boolean
        example: true
      created_date:
        type: string
        format: date-time
        example: 2019-12-04T18:28:26.261Z
        
  Response:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
    required:
      - code
      - message
      

# Added by API Auto Mocking Plugin
# host: andrewrisse.com
# basePath: /api
# schemes:
#  - http
# Added by API Auto Mocking Plugin
# host: www.andrewrisse.com
# basePath: /api
# schemes:
#  - http
# Added by API Auto Mocking Plugin
# host: www.andrewrisse.com
# basePath: /api
# schemes:
#  - http
# Added by API Auto Mocking Plugin
host: virtserver.swaggerhub.com
basePath: /USC1/TodosAPI/1.0.0
schemes:
 - https
 - http